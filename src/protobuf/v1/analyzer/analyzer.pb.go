// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/analyzer/analyzer.proto

package analyzer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NetworkLogs struct {
	NwLog                []*KnoxNetworkLog `protobuf:"bytes,1,rep,name=NwLog,proto3" json:"NwLog,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NetworkLogs) Reset()         { *m = NetworkLogs{} }
func (m *NetworkLogs) String() string { return proto.CompactTextString(m) }
func (*NetworkLogs) ProtoMessage()    {}
func (*NetworkLogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_90398d2328ab17be, []int{0}
}

func (m *NetworkLogs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkLogs.Unmarshal(m, b)
}
func (m *NetworkLogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkLogs.Marshal(b, m, deterministic)
}
func (m *NetworkLogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkLogs.Merge(m, src)
}
func (m *NetworkLogs) XXX_Size() int {
	return xxx_messageInfo_NetworkLogs.Size(m)
}
func (m *NetworkLogs) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkLogs.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkLogs proto.InternalMessageInfo

func (m *NetworkLogs) GetNwLog() []*KnoxNetworkLog {
	if m != nil {
		return m.NwLog
	}
	return nil
}

type NetworkPolicies struct {
	NwPolicies           []*KnoxNetworkPolicy `protobuf:"bytes,1,rep,name=NwPolicies,proto3" json:"NwPolicies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NetworkPolicies) Reset()         { *m = NetworkPolicies{} }
func (m *NetworkPolicies) String() string { return proto.CompactTextString(m) }
func (*NetworkPolicies) ProtoMessage()    {}
func (*NetworkPolicies) Descriptor() ([]byte, []int) {
	return fileDescriptor_90398d2328ab17be, []int{1}
}

func (m *NetworkPolicies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkPolicies.Unmarshal(m, b)
}
func (m *NetworkPolicies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkPolicies.Marshal(b, m, deterministic)
}
func (m *NetworkPolicies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkPolicies.Merge(m, src)
}
func (m *NetworkPolicies) XXX_Size() int {
	return xxx_messageInfo_NetworkPolicies.Size(m)
}
func (m *NetworkPolicies) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkPolicies.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkPolicies proto.InternalMessageInfo

func (m *NetworkPolicies) GetNwPolicies() []*KnoxNetworkPolicy {
	if m != nil {
		return m.NwPolicies
	}
	return nil
}

type SystemLogs struct {
	SysLog               []*KnoxSystemLog `protobuf:"bytes,1,rep,name=SysLog,proto3" json:"SysLog,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SystemLogs) Reset()         { *m = SystemLogs{} }
func (m *SystemLogs) String() string { return proto.CompactTextString(m) }
func (*SystemLogs) ProtoMessage()    {}
func (*SystemLogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_90398d2328ab17be, []int{2}
}

func (m *SystemLogs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemLogs.Unmarshal(m, b)
}
func (m *SystemLogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemLogs.Marshal(b, m, deterministic)
}
func (m *SystemLogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemLogs.Merge(m, src)
}
func (m *SystemLogs) XXX_Size() int {
	return xxx_messageInfo_SystemLogs.Size(m)
}
func (m *SystemLogs) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemLogs.DiscardUnknown(m)
}

var xxx_messageInfo_SystemLogs proto.InternalMessageInfo

func (m *SystemLogs) GetSysLog() []*KnoxSystemLog {
	if m != nil {
		return m.SysLog
	}
	return nil
}

type SystemPolicies struct {
	SysPolicies          []*KnoxSystemPolicy `protobuf:"bytes,1,rep,name=SysPolicies,proto3" json:"SysPolicies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SystemPolicies) Reset()         { *m = SystemPolicies{} }
func (m *SystemPolicies) String() string { return proto.CompactTextString(m) }
func (*SystemPolicies) ProtoMessage()    {}
func (*SystemPolicies) Descriptor() ([]byte, []int) {
	return fileDescriptor_90398d2328ab17be, []int{3}
}

func (m *SystemPolicies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SystemPolicies.Unmarshal(m, b)
}
func (m *SystemPolicies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SystemPolicies.Marshal(b, m, deterministic)
}
func (m *SystemPolicies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemPolicies.Merge(m, src)
}
func (m *SystemPolicies) XXX_Size() int {
	return xxx_messageInfo_SystemPolicies.Size(m)
}
func (m *SystemPolicies) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemPolicies.DiscardUnknown(m)
}

var xxx_messageInfo_SystemPolicies proto.InternalMessageInfo

func (m *SystemPolicies) GetSysPolicies() []*KnoxSystemPolicy {
	if m != nil {
		return m.SysPolicies
	}
	return nil
}

//
//message KnoxFromSource {
//string Path = 1;
//string Dir = 2;
//bool Recursive = 3;
//}
//
//message KnoxMatchPaths {
//string Path = 1;
//bool ReadOnly = 2;
//bool OwnerOnly = 3;
//repeated KnoxFromSource FromSource = 4;
//}
//
//message KnoxMatchDirectories {
//string Dir = 1;
//bool ReadOnly = 2;
//bool OwnerOnly = 3;
//repeated KnoxFromSource FromSource = 4;
//}
//
//message KnoxMatchProtocols {
//string Protocol = 1;
//repeated KnoxFromSource FromSource = 2;
//}
//
//message KnoxSystemPolicy {
//string APIVersion = 1;
//string Kind = 2;
//map<string, string> Metadata = 3;
//string Outdated = 4;
//message Spec {
//int32 Severity = 5;
//repeated string Tags = 6;
//string Messsage = 7;
//message Selector {
//map<string, string> MatchLabels = 8;
//}
//message Process {
//repeated KnoxMatchPaths MatchPaths = 9;
//repeated KnoxMatchDirectories MatchDirectories = 10;
//}
//message File {
//repeated KnoxMatchPaths MatchPaths = 11;
//repeated KnoxMatchDirectories MatchDirectories = 12;
//}
//repeated KnoxMatchProtocols Network = 13;
//string Action = 14;
//}
//int64 GeneratedTime = 15;
//}
type KnoxSystemPolicy struct {
	SystemPolicy         []byte   `protobuf:"bytes,1,opt,name=SystemPolicy,proto3" json:"SystemPolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KnoxSystemPolicy) Reset()         { *m = KnoxSystemPolicy{} }
func (m *KnoxSystemPolicy) String() string { return proto.CompactTextString(m) }
func (*KnoxSystemPolicy) ProtoMessage()    {}
func (*KnoxSystemPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_90398d2328ab17be, []int{4}
}

func (m *KnoxSystemPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KnoxSystemPolicy.Unmarshal(m, b)
}
func (m *KnoxSystemPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KnoxSystemPolicy.Marshal(b, m, deterministic)
}
func (m *KnoxSystemPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KnoxSystemPolicy.Merge(m, src)
}
func (m *KnoxSystemPolicy) XXX_Size() int {
	return xxx_messageInfo_KnoxSystemPolicy.Size(m)
}
func (m *KnoxSystemPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_KnoxSystemPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_KnoxSystemPolicy proto.InternalMessageInfo

func (m *KnoxSystemPolicy) GetSystemPolicy() []byte {
	if m != nil {
		return m.SystemPolicy
	}
	return nil
}

type KnoxNetworkPolicy struct {
	NetworkPolicy        []byte   `protobuf:"bytes,1,opt,name=NetworkPolicy,proto3" json:"NetworkPolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KnoxNetworkPolicy) Reset()         { *m = KnoxNetworkPolicy{} }
func (m *KnoxNetworkPolicy) String() string { return proto.CompactTextString(m) }
func (*KnoxNetworkPolicy) ProtoMessage()    {}
func (*KnoxNetworkPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_90398d2328ab17be, []int{5}
}

func (m *KnoxNetworkPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KnoxNetworkPolicy.Unmarshal(m, b)
}
func (m *KnoxNetworkPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KnoxNetworkPolicy.Marshal(b, m, deterministic)
}
func (m *KnoxNetworkPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KnoxNetworkPolicy.Merge(m, src)
}
func (m *KnoxNetworkPolicy) XXX_Size() int {
	return xxx_messageInfo_KnoxNetworkPolicy.Size(m)
}
func (m *KnoxNetworkPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_KnoxNetworkPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_KnoxNetworkPolicy proto.InternalMessageInfo

func (m *KnoxNetworkPolicy) GetNetworkPolicy() []byte {
	if m != nil {
		return m.NetworkPolicy
	}
	return nil
}

type KnoxNetworkLog struct {
	FlowID               int32    `protobuf:"varint,1,opt,name=FlowID,proto3" json:"FlowID,omitempty"`
	ClusterName          string   `protobuf:"bytes,2,opt,name=ClusterName,proto3" json:"ClusterName,omitempty"`
	SrcNamespace         string   `protobuf:"bytes,3,opt,name=SrcNamespace,proto3" json:"SrcNamespace,omitempty"`
	SrcPodName           string   `protobuf:"bytes,4,opt,name=SrcPodName,proto3" json:"SrcPodName,omitempty"`
	DstNamespace         string   `protobuf:"bytes,5,opt,name=DstNamespace,proto3" json:"DstNamespace,omitempty"`
	DstPodName           string   `protobuf:"bytes,6,opt,name=DstPodName,proto3" json:"DstPodName,omitempty"`
	EtherType            int32    `protobuf:"varint,7,opt,name=EtherType,proto3" json:"EtherType,omitempty"`
	Protocol             int32    `protobuf:"varint,8,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	SrcIP                string   `protobuf:"bytes,9,opt,name=SrcIP,proto3" json:"SrcIP,omitempty"`
	DstIP                string   `protobuf:"bytes,10,opt,name=DstIP,proto3" json:"DstIP,omitempty"`
	SrcPort              int32    `protobuf:"varint,11,opt,name=SrcPort,proto3" json:"SrcPort,omitempty"`
	DstPort              int32    `protobuf:"varint,12,opt,name=DstPort,proto3" json:"DstPort,omitempty"`
	SynFlag              bool     `protobuf:"varint,13,opt,name=SynFlag,proto3" json:"SynFlag,omitempty"`
	IsReply              bool     `protobuf:"varint,14,opt,name=IsReply,proto3" json:"IsReply,omitempty"`
	DNSQuery             string   `protobuf:"bytes,15,opt,name=DNSQuery,proto3" json:"DNSQuery,omitempty"`
	DNSRes               string   `protobuf:"bytes,16,opt,name=DNSRes,proto3" json:"DNSRes,omitempty"`
	DNSResIPs            []string `protobuf:"bytes,17,rep,name=DNSResIPs,proto3" json:"DNSResIPs,omitempty"`
	HTTPMethod           string   `protobuf:"bytes,18,opt,name=HTTPMethod,proto3" json:"HTTPMethod,omitempty"`
	HTTPPath             string   `protobuf:"bytes,19,opt,name=HTTPPath,proto3" json:"HTTPPath,omitempty"`
	Direction            string   `protobuf:"bytes,20,opt,name=Direction,proto3" json:"Direction,omitempty"`
	Action               string   `protobuf:"bytes,21,opt,name=Action,proto3" json:"Action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KnoxNetworkLog) Reset()         { *m = KnoxNetworkLog{} }
func (m *KnoxNetworkLog) String() string { return proto.CompactTextString(m) }
func (*KnoxNetworkLog) ProtoMessage()    {}
func (*KnoxNetworkLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_90398d2328ab17be, []int{6}
}

func (m *KnoxNetworkLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KnoxNetworkLog.Unmarshal(m, b)
}
func (m *KnoxNetworkLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KnoxNetworkLog.Marshal(b, m, deterministic)
}
func (m *KnoxNetworkLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KnoxNetworkLog.Merge(m, src)
}
func (m *KnoxNetworkLog) XXX_Size() int {
	return xxx_messageInfo_KnoxNetworkLog.Size(m)
}
func (m *KnoxNetworkLog) XXX_DiscardUnknown() {
	xxx_messageInfo_KnoxNetworkLog.DiscardUnknown(m)
}

var xxx_messageInfo_KnoxNetworkLog proto.InternalMessageInfo

func (m *KnoxNetworkLog) GetFlowID() int32 {
	if m != nil {
		return m.FlowID
	}
	return 0
}

func (m *KnoxNetworkLog) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *KnoxNetworkLog) GetSrcNamespace() string {
	if m != nil {
		return m.SrcNamespace
	}
	return ""
}

func (m *KnoxNetworkLog) GetSrcPodName() string {
	if m != nil {
		return m.SrcPodName
	}
	return ""
}

func (m *KnoxNetworkLog) GetDstNamespace() string {
	if m != nil {
		return m.DstNamespace
	}
	return ""
}

func (m *KnoxNetworkLog) GetDstPodName() string {
	if m != nil {
		return m.DstPodName
	}
	return ""
}

func (m *KnoxNetworkLog) GetEtherType() int32 {
	if m != nil {
		return m.EtherType
	}
	return 0
}

func (m *KnoxNetworkLog) GetProtocol() int32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *KnoxNetworkLog) GetSrcIP() string {
	if m != nil {
		return m.SrcIP
	}
	return ""
}

func (m *KnoxNetworkLog) GetDstIP() string {
	if m != nil {
		return m.DstIP
	}
	return ""
}

func (m *KnoxNetworkLog) GetSrcPort() int32 {
	if m != nil {
		return m.SrcPort
	}
	return 0
}

func (m *KnoxNetworkLog) GetDstPort() int32 {
	if m != nil {
		return m.DstPort
	}
	return 0
}

func (m *KnoxNetworkLog) GetSynFlag() bool {
	if m != nil {
		return m.SynFlag
	}
	return false
}

func (m *KnoxNetworkLog) GetIsReply() bool {
	if m != nil {
		return m.IsReply
	}
	return false
}

func (m *KnoxNetworkLog) GetDNSQuery() string {
	if m != nil {
		return m.DNSQuery
	}
	return ""
}

func (m *KnoxNetworkLog) GetDNSRes() string {
	if m != nil {
		return m.DNSRes
	}
	return ""
}

func (m *KnoxNetworkLog) GetDNSResIPs() []string {
	if m != nil {
		return m.DNSResIPs
	}
	return nil
}

func (m *KnoxNetworkLog) GetHTTPMethod() string {
	if m != nil {
		return m.HTTPMethod
	}
	return ""
}

func (m *KnoxNetworkLog) GetHTTPPath() string {
	if m != nil {
		return m.HTTPPath
	}
	return ""
}

func (m *KnoxNetworkLog) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

func (m *KnoxNetworkLog) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

type KnoxSystemLog struct {
	LogID                int32    `protobuf:"varint,1,opt,name=LogID,proto3" json:"LogID,omitempty"`
	ClusterName          string   `protobuf:"bytes,2,opt,name=ClusterName,proto3" json:"ClusterName,omitempty"`
	HostName             string   `protobuf:"bytes,3,opt,name=HostName,proto3" json:"HostName,omitempty"`
	Namespace            string   `protobuf:"bytes,4,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	PodName              string   `protobuf:"bytes,5,opt,name=PodName,proto3" json:"PodName,omitempty"`
	SourceOrigin         string   `protobuf:"bytes,6,opt,name=SourceOrigin,proto3" json:"SourceOrigin,omitempty"`
	Source               string   `protobuf:"bytes,7,opt,name=Source,proto3" json:"Source,omitempty"`
	Operation            string   `protobuf:"bytes,8,opt,name=Operation,proto3" json:"Operation,omitempty"`
	ResourceOrigin       string   `protobuf:"bytes,9,opt,name=ResourceOrigin,proto3" json:"ResourceOrigin,omitempty"`
	Resource             string   `protobuf:"bytes,10,opt,name=Resource,proto3" json:"Resource,omitempty"`
	Data                 string   `protobuf:"bytes,11,opt,name=Data,proto3" json:"Data,omitempty"`
	ReadOnly             bool     `protobuf:"varint,12,opt,name=ReadOnly,proto3" json:"ReadOnly,omitempty"`
	Result               string   `protobuf:"bytes,13,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KnoxSystemLog) Reset()         { *m = KnoxSystemLog{} }
func (m *KnoxSystemLog) String() string { return proto.CompactTextString(m) }
func (*KnoxSystemLog) ProtoMessage()    {}
func (*KnoxSystemLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_90398d2328ab17be, []int{7}
}

func (m *KnoxSystemLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KnoxSystemLog.Unmarshal(m, b)
}
func (m *KnoxSystemLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KnoxSystemLog.Marshal(b, m, deterministic)
}
func (m *KnoxSystemLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KnoxSystemLog.Merge(m, src)
}
func (m *KnoxSystemLog) XXX_Size() int {
	return xxx_messageInfo_KnoxSystemLog.Size(m)
}
func (m *KnoxSystemLog) XXX_DiscardUnknown() {
	xxx_messageInfo_KnoxSystemLog.DiscardUnknown(m)
}

var xxx_messageInfo_KnoxSystemLog proto.InternalMessageInfo

func (m *KnoxSystemLog) GetLogID() int32 {
	if m != nil {
		return m.LogID
	}
	return 0
}

func (m *KnoxSystemLog) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *KnoxSystemLog) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *KnoxSystemLog) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *KnoxSystemLog) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *KnoxSystemLog) GetSourceOrigin() string {
	if m != nil {
		return m.SourceOrigin
	}
	return ""
}

func (m *KnoxSystemLog) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *KnoxSystemLog) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *KnoxSystemLog) GetResourceOrigin() string {
	if m != nil {
		return m.ResourceOrigin
	}
	return ""
}

func (m *KnoxSystemLog) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *KnoxSystemLog) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *KnoxSystemLog) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

func (m *KnoxSystemLog) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*NetworkLogs)(nil), "v1.analyzer.NetworkLogs")
	proto.RegisterType((*NetworkPolicies)(nil), "v1.analyzer.NetworkPolicies")
	proto.RegisterType((*SystemLogs)(nil), "v1.analyzer.SystemLogs")
	proto.RegisterType((*SystemPolicies)(nil), "v1.analyzer.SystemPolicies")
	proto.RegisterType((*KnoxSystemPolicy)(nil), "v1.analyzer.KnoxSystemPolicy")
	proto.RegisterType((*KnoxNetworkPolicy)(nil), "v1.analyzer.KnoxNetworkPolicy")
	proto.RegisterType((*KnoxNetworkLog)(nil), "v1.analyzer.KnoxNetworkLog")
	proto.RegisterType((*KnoxSystemLog)(nil), "v1.analyzer.KnoxSystemLog")
}

func init() { proto.RegisterFile("v1/analyzer/analyzer.proto", fileDescriptor_90398d2328ab17be) }

var fileDescriptor_90398d2328ab17be = []byte{
	// 723 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x4d, 0x4f, 0x1b, 0x3b,
	0x14, 0x55, 0x5e, 0x48, 0x48, 0x6e, 0x20, 0x80, 0x1f, 0xef, 0xd5, 0x0a, 0x14, 0x45, 0xa3, 0xaa,
	0xca, 0x2a, 0x11, 0x54, 0x6d, 0xd5, 0x4d, 0x0b, 0x6d, 0x0a, 0x8d, 0x9a, 0x86, 0xc1, 0xc3, 0xaa,
	0xbb, 0x61, 0xb0, 0x92, 0x88, 0x61, 0x1c, 0xd9, 0x1e, 0xc2, 0x74, 0xd7, 0xdf, 0xd2, 0xbf, 0xd6,
	0x1f, 0x52, 0xf9, 0x63, 0xbe, 0x02, 0x48, 0xdd, 0x20, 0x9f, 0x73, 0xef, 0x3d, 0x3e, 0x36, 0x27,
	0x1e, 0xe8, 0xdc, 0x1d, 0x0e, 0xfc, 0xc8, 0x0f, 0x93, 0x1f, 0x94, 0x67, 0x8b, 0xfe, 0x82, 0x33,
	0xc9, 0x50, 0xeb, 0xee, 0xb0, 0x9f, 0x52, 0xce, 0x31, 0xb4, 0x26, 0x54, 0x2e, 0x19, 0xbf, 0x19,
	0xb3, 0xa9, 0x40, 0x87, 0x50, 0x9b, 0x2c, 0xc7, 0x6c, 0x8a, 0x2b, 0xdd, 0x6a, 0xaf, 0x75, 0xb4,
	0xd7, 0x2f, 0xf4, 0xf6, 0xbf, 0x46, 0xec, 0x3e, 0x6f, 0x26, 0xa6, 0xd3, 0xb9, 0x80, 0x2d, 0x4b,
	0xba, 0x2c, 0x9c, 0x07, 0x73, 0x2a, 0xd0, 0x7b, 0x80, 0xc9, 0x32, 0x45, 0x56, 0xea, 0xe0, 0x29,
	0x29, 0xdd, 0x97, 0x90, 0xc2, 0x84, 0x73, 0x0c, 0xe0, 0x25, 0x42, 0xd2, 0x5b, 0xed, 0xe9, 0x08,
	0xea, 0x5e, 0x22, 0x72, 0x53, 0x9d, 0x07, 0x4a, 0x59, 0x33, 0xb1, 0x9d, 0xce, 0x05, 0xb4, 0x0d,
	0x99, 0x79, 0xfa, 0x00, 0x2d, 0x2f, 0x11, 0x2b, 0xa6, 0x9e, 0x3f, 0x21, 0x65, 0x3d, 0x15, 0x27,
	0x9c, 0x37, 0xb0, 0xbd, 0xda, 0x80, 0x1c, 0xd8, 0x28, 0x62, 0x5c, 0xe9, 0x56, 0x7a, 0x1b, 0xa4,
	0xc4, 0x39, 0xef, 0x60, 0xe7, 0xc1, 0x69, 0xd1, 0x0b, 0xd8, 0x2c, 0x11, 0x76, 0xb2, 0x4c, 0x3a,
	0xbf, 0xd7, 0xa0, 0x5d, 0xbe, 0x74, 0xf4, 0x3f, 0xd4, 0x4f, 0x43, 0xb6, 0x1c, 0x0d, 0xf5, 0x44,
	0x8d, 0x58, 0x84, 0xba, 0xd0, 0xfa, 0x14, 0xc6, 0x42, 0x52, 0x3e, 0xf1, 0x6f, 0x29, 0xfe, 0xa7,
	0x5b, 0xe9, 0x35, 0x49, 0x91, 0xd2, 0x5e, 0x79, 0xa0, 0x96, 0x62, 0xe1, 0x07, 0x14, 0x57, 0x75,
	0x4b, 0x89, 0x43, 0x07, 0x00, 0x1e, 0x0f, 0x5c, 0x76, 0xad, 0x45, 0xd6, 0x74, 0x47, 0x81, 0x51,
	0x1a, 0x43, 0x21, 0x73, 0x8d, 0x9a, 0xd1, 0x28, 0x72, 0x4a, 0x63, 0x28, 0x64, 0xaa, 0x51, 0x37,
	0x1a, 0x39, 0x83, 0xf6, 0xa1, 0xf9, 0x59, 0xce, 0x28, 0xbf, 0x4c, 0x16, 0x14, 0xaf, 0xeb, 0x43,
	0xe4, 0x04, 0xea, 0x40, 0xc3, 0x55, 0x29, 0x0d, 0x58, 0x88, 0x1b, 0xba, 0x98, 0x61, 0xb4, 0x0b,
	0x35, 0x8f, 0x07, 0x23, 0x17, 0x37, 0xb5, 0xa8, 0x01, 0x8a, 0x1d, 0x0a, 0x39, 0x72, 0x31, 0x18,
	0x56, 0x03, 0x84, 0x61, 0x5d, 0xfb, 0xe6, 0x12, 0xb7, 0xb4, 0x4c, 0x0a, 0x55, 0x45, 0xbb, 0xe1,
	0x12, 0x6f, 0x98, 0x8a, 0x85, 0x7a, 0x26, 0x89, 0x4e, 0x43, 0x7f, 0x8a, 0x37, 0xbb, 0x95, 0x5e,
	0x83, 0xa4, 0x50, 0x55, 0x46, 0x82, 0xd0, 0x45, 0x98, 0xe0, 0xb6, 0xa9, 0x58, 0xa8, 0xfc, 0x0e,
	0x27, 0xde, 0x45, 0x4c, 0x79, 0x82, 0xb7, 0xb4, 0x81, 0x0c, 0xab, 0xff, 0xd5, 0x70, 0xe2, 0x11,
	0x2a, 0xf0, 0xb6, 0xae, 0x58, 0xa4, 0x6e, 0xc0, 0xac, 0x46, 0xae, 0xc0, 0x3b, 0xdd, 0x6a, 0xaf,
	0x49, 0x72, 0x42, 0xdd, 0xdf, 0x97, 0xcb, 0x4b, 0xf7, 0x1b, 0x95, 0x33, 0x76, 0x8d, 0x91, 0xb9,
	0xbf, 0x9c, 0x51, 0x3b, 0x2a, 0xe4, 0xfa, 0x72, 0x86, 0xff, 0x35, 0x3b, 0xa6, 0x58, 0x2b, 0xcf,
	0x39, 0x0d, 0xe4, 0x9c, 0x45, 0x78, 0x57, 0x17, 0x73, 0x42, 0xf9, 0x39, 0x31, 0xa5, 0xff, 0x8c,
	0x1f, 0x83, 0x9c, 0x9f, 0x55, 0xd8, 0x2c, 0xfd, 0x8c, 0xd4, 0x9d, 0x8e, 0xd9, 0x34, 0x0b, 0x99,
	0x01, 0x7f, 0x91, 0x31, 0xe5, 0x8d, 0x99, 0x30, 0xd8, 0x7c, 0x65, 0x58, 0x79, 0xcb, 0x83, 0x63,
	0xa2, 0x95, 0x13, 0xea, 0x86, 0xd3, 0xc8, 0x98, 0x50, 0xad, 0x17, 0x32, 0xe7, 0xb1, 0x98, 0x07,
	0xf4, 0x9c, 0xcf, 0xa7, 0xf3, 0xc8, 0x26, 0xaa, 0xc4, 0xa9, 0x93, 0x19, 0xac, 0x03, 0xd5, 0x24,
	0x16, 0xa9, 0x3d, 0xcf, 0x17, 0x94, 0xfb, 0xfa, 0xd0, 0x0d, 0xb3, 0x67, 0x46, 0xa0, 0x97, 0xd0,
	0x26, 0x54, 0x14, 0xb5, 0x4d, 0xb0, 0x56, 0x58, 0x75, 0xaa, 0x94, 0xb1, 0x21, 0xcb, 0x30, 0x42,
	0xb0, 0x36, 0xf4, 0xa5, 0xaf, 0x43, 0xd6, 0x24, 0x7a, 0x6d, 0xfa, 0xfd, 0xeb, 0xf3, 0x28, 0x4c,
	0x74, 0xc4, 0x1a, 0x24, 0xc3, 0xca, 0x29, 0xa1, 0x22, 0x0e, 0xa5, 0x8e, 0x58, 0x93, 0x58, 0x74,
	0xf4, 0xab, 0x02, 0x8d, 0x13, 0xfb, 0x10, 0xa1, 0x31, 0xa0, 0x33, 0x2a, 0x57, 0x5f, 0x55, 0x5c,
	0x7a, 0xac, 0x0a, 0xaf, 0x76, 0x67, 0xff, 0xb1, 0x4a, 0x36, 0x37, 0x82, 0x9d, 0x33, 0x2a, 0x57,
	0x9e, 0xc3, 0x67, 0xa5, 0x91, 0xfc, 0xb5, 0xed, 0xec, 0x3d, 0x52, 0x48, 0xa7, 0x3e, 0xbe, 0xfd,
	0xfe, 0x7a, 0x3a, 0x97, 0xb3, 0xf8, 0xaa, 0x1f, 0xb0, 0xdb, 0x81, 0x1f, 0x04, 0xf1, 0x4d, 0xc4,
	0xee, 0x07, 0xea, 0xcf, 0x49, 0x2c, 0x99, 0x79, 0xb6, 0x06, 0xfa, 0x33, 0x23, 0x06, 0x85, 0x4f,
	0xd0, 0x55, 0x5d, 0x73, 0xaf, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x43, 0x93, 0x03, 0x56, 0x98,
	0x06, 0x00, 0x00,
}
